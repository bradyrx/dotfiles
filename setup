#!/bin/bash
################################################################################
# setup
# Creates symlinks from $HOME to the committed files in $HOME/dotfiles
################################################################################
# Files to be ignored
exclude=(README.md setup cleanup .gitignore originals LICENSE)

# Setup
root="$HOME"
dotfiles="$HOME/dotfiles"
cd $dotfiles
[ $? -ne 0 ] && echo "Error: dotfiles repo should be cloned into \$HOME." && exit 1
files=($(git ls-tree --name-only master | xargs)) # get list of committed files
storage="$dotfiles/originals"
# Double pipe says if conditional True, never execute the second.
[ -d $storage ] || mkdir $storage

# Move existing stuff to storage, then create symlinks
for file in ${files[@]}; do # iterate through files
  if ! [[ " ${exclude[@]} " =~ " $file " ]]; then
    echo "Creating symlink to $file in $HOME/..."
    if [ -L $root/$file ]; then
      echo "Removing existing symlink $root/$file..."
      rm $root/$file # remove if symlink
    elif [ -r $root/$file ]; then
      echo "Moving existing $file file to $storage..."
      mv $root/$file $storage/ # copy if not
    fi
    ln -s $dotfiles/$file $root/$file
  fi
done

# vim helper installations
BASH_IT_ADDR="git@github.com:Bash-it/bash-it.git"
VUNDLE_ADDR="git@github.com:gmarik/vundle.git"
PATHOGEN_ADDR="git@github.com:tpope/vim-pathogen.git"

# Install Pathogen (doubles up with Vundle to make sure things install correctly)
mkdir -p ~/.vim/autoload ~/.vim/bundle && \
curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim

# Install Vundle and Bash_it
VUNDLE_DIR=~/.vim/bundle/Vundle.vim
if [ ! -d "$VUNDLE_DIR" ]; then
  git clone ${VUNDLE_ADDR} ${VUNDLE_DIR}
fi

# Install bashit
BASHIT_DIR=~/.bash_it
if [ ! -d "$BASHIT_DIR" ]; then
  git clone ${BASH_IT_ADDR} ${BASHIT_DIR}
  ${BASHIT_DIR}/install.sh
fi


# Install vim bundles
vim -u ~/.vimrc.bundles +BundleInstall +q